import type { NextApiRequest, NextApiResponse } from "next";
import OpenAI from "openai";

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  const key = process.env.OPENAI_API_KEY;
  const { messages } = (req.body || {}) as { messages?: { role:"system"|"user"|"assistant"; content:string }[] };

  if (!key) {
    // Friendly fallback—no key needed
    const user = messages?.findLast?.(m => m.role === "user")?.content || "";
    const reply = `Tip: Healthy roots love biology. Mix compost + biochar, water deeply, and avoid over-fertilizing. (AI is disabled right now — add OPENAI_API_KEY to enable.) You asked: "${user}"`;
    return res.status(200).json({ reply });
  }

  try {
    const openai = new OpenAI({ apiKey: key });
    const out = await openai.chat.completions.create({
      model: "gpt-4o-mini",
      temperature: 0.4,
      messages: [
        { role: "system", content: "You are GardenGPT, a friendly expert for home gardeners. Be concise and practical." },
        ...(messages || []).slice(-12)
      ]
    });
    const reply = out.choices[0]?.message?.content || "Happy to help!";
    res.status(200).json({ reply });
  } catch (e: any) {
    res.status(200).json({ reply: "Sorry, AI is busy. Try again shortly." });
  }
}
